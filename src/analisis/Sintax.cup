package analisis;

import java_cup.runtime.Symbol;
import java.util.HashMap;

parser code
{:
    

    // Tus variables y métodos personalizados aquí
    private Panel panel; // Referencia al panel

    // Método para establecer el panel desde fuera
    public void setPanel(Panel panel) {
        this.panel = panel;
    }

    // Acceso a la instancia del panel desde las acciones del parser
    public Panel getPanel() {
        return this.panel;
    }

    // HashMap para almacenar identificadores y acciones
    private HashMap<String, String> instrucciones = new HashMap<>();

    public HashMap<String, String> getInstrucciones() {
        return instrucciones;
    }

    public void agregarInstruccion(String identificador, String accion) {
    instrucciones.put(identificador, accion);
    }


    private Symbol s;

    public void syntax_error(Symbol s){
        this.s = s;
    }

    public Symbol getS(){
        return this.s;
    }
:};

// Definir los terminales (tokens) que provienen del lexer
terminal ESPACIO, IDENTIFICADOR, CREAR, ASIGNAR, MODIFICAR, ELIMINAR, AGREGAR, REMOVER, PINTAR, MOSTRAR, VACIAR, DIGITO
, ULTIMO, DE, COLOR, A, EN, ARRAY, LISTA, MATRIZ, CORCHETEA, CORCHETEC, INDICE_MATRIZ, FINAL, ERROR;

// Definir las no-terminales
non terminal instruccion, crearArray, crearLista, asignarValorArray, asignarValorMatriz, 
    modificarArray, modificarMatriz, eliminarArray, eliminarMatriz, agregarValor, removerUltimo, 
    pintarArray, pintarMatriz, mostrarEstructura, vaciarEstructura;

start with instruccion;

// Producciones
instruccion ::= 
    crearArray |
    crearLista |
    asignarValorArray |
    asignarValorMatriz |
    modificarArray |
    modificarMatriz |
    eliminarArray |
    eliminarMatriz |
    agregarValor |
    removerUltimo |
    pintarArray |
    pintarMatriz |
    mostrarEstructura |
    vaciarEstructura
;

// Crear array {IDENTIFICADOR}[{INDICE}];
crearArray ::= CREAR ESPACIO ARRAY ESPACIO IDENTIFICADOR CORCHETEA DIGITO CORCHETEC FINAL
{:
    String identificador = ((Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)).value.toString();
    String digitoString = ((Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)).value.toString();
    agregarInstruccion(identificador, "crearArray");
:};



// Crear lista {IDENTIFICADOR}[{opcional INDICE}];
crearLista ::= CREAR ESPACIO LISTA ESPACIO IDENTIFICADOR CORCHETEA CORCHETEC FINAL |
               CREAR ESPACIO LISTA ESPACIO IDENTIFICADOR CORCHETEA DIGITO CORCHETEC FINAL
;

// Asignar {VALOR} a {IDENTIFICADOR}[{INDICE}];
asignarValorArray ::= ASIGNAR ESPACIO DIGITO ESPACIO A ESPACIO IDENTIFICADOR CORCHETEA DIGITO CORCHETEC FINAL
;

// Asignar {VALOR} a {IDENTIFICADOR}[{INDICE_MATRIZ}];
asignarValorMatriz ::= ASIGNAR ESPACIO DIGITO ESPACIO A ESPACIO IDENTIFICADOR CORCHETEA INDICE_MATRIZ CORCHETEC FINAL
;

// Modificar {IDENTIFICADOR}[{INDICE}] a {NUEVO_VALOR};
modificarArray ::= MODIFICAR ESPACIO IDENTIFICADOR CORCHETEA DIGITO CORCHETEC ESPACIO A ESPACIO DIGITO FINAL
;

// Modificar {IDENTIFICADOR}[{INDICE_MATRIZ}] a {NUEVO_VALOR};
modificarMatriz ::= MODIFICAR ESPACIO IDENTIFICADOR CORCHETEA INDICE_MATRIZ CORCHETEC ESPACIO A ESPACIO DIGITO FINAL
;

// Eliminar {IDENTIFICADOR}[{INDICE}];
eliminarArray ::= ELIMINAR ESPACIO IDENTIFICADOR CORCHETEA DIGITO CORCHETEC FINAL
;

// Eliminar {IDENTIFICADOR}[{INDICE_MATRIZ}];
eliminarMatriz ::= ELIMINAR ESPACIO IDENTIFICADOR CORCHETEA INDICE_MATRIZ CORCHETEC FINAL
;

// Agregar {VALOR} a {IDENTIFICADOR};
agregarValor ::= AGREGAR ESPACIO DIGITO ESPACIO A ESPACIO IDENTIFICADOR FINAL
;

// Remover último de {IDENTIFICADOR};
removerUltimo ::= REMOVER ESPACIO ULTIMO ESPACIO DE ESPACIO IDENTIFICADOR FINAL
;

// Pintar {COLOR} en {IDENTIFICADOR}[{INDICE}];
pintarArray ::= PINTAR ESPACIO COLOR ESPACIO EN ESPACIO IDENTIFICADOR CORCHETEA DIGITO CORCHETEC FINAL
;

// Pintar {COLOR} en {IDENTIFICADOR}[{INDICE_MATRIZ}];
pintarMatriz ::= PINTAR ESPACIO COLOR ESPACIO EN ESPACIO IDENTIFICADOR CORCHETEA INDICE_MATRIZ CORCHETEC FINAL
;

// Mostrar {IDENTIFICADOR};
mostrarEstructura ::= MOSTRAR ESPACIO IDENTIFICADOR FINAL
;

// Vaciar {IDENTIFICADOR};
vaciarEstructura ::= VACIAR ESPACIO IDENTIFICADOR FINAL
;
